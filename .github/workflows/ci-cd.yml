name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Selenium Tests
        run: |
          pip install -r requirements.txt
          python tests/functional/selenium_tests.py

      - name: Run JMeter Tests
        run: |
          jmeter -n -t tests/performance/jmeter_tests.jmx -l jmeter_results.jtl

      - name: Run OWASP ZAP
        run: |
          docker pull owasp/zap2docker-stable
          docker run -t owasp/zap2docker-stable zap-baseline.py -t http://yourapp:8080

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and Push Docker Image
        run: |
          docker build -t yourapp:latest .
          docker tag yourapp:latest your-dockerhub-account/yourapp:latest
          docker push your-dockerhub-account/yourapp:latest

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment.yaml

  monitor:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Prometheus
        run: |
          docker run -d --name=prometheus -p 9090:9090 -v ${{ github.workspace }}/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

      - name: Set up Grafana
        run: |
          docker run -d --name=grafana -p 3000:3000 -v ${{ github.workspace }}/monitoring/grafana_dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json grafana/grafana
